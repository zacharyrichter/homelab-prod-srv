services:
  planka:
    image: ghcr.io/plankanban/planka:latest
    restart: always
    volumes:
      - /opt/appdata/planka/user-avatars:/app/public/user-avatars
      - /opt/appdata/planka/project-background-images:/app/public/project-background-images
      - /opt/appdata/planka/attachments:/app/private/attachments
    networks:
      - warptunnel
      - planka
    ports:
      - 1337:1337
    environment:
    - BASE_URL=${BASE_URL}
    - DATABASE_URL=${DATABASE_URL}
    - SECRET_KEY=${SECRET_KEY}
    - TRUST_PROXY=0
    - ALLOW_ALL_TO_CREATE_PROJECTS=true
    - OIDC_ISSUER=${OIDC_ISSUER}
    - OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
    - OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
    - OIDC_SCOPES=openid profile email name
    - OIDC_CLAIMS_SOURCE=userinfo
    - OIDC_EMAIL_ATTRIBUTE=email
    - OIDC_NAME_ATTRIBUTE=name
    - OIDC_USERNAME_ATTRIBUTE=preferred_username
    - OIDC_ADMIN_ROLES=planka-admin
    - OIDC_ROLES_ATTRIBUTE=groups
    - OIDC_PROJECT_OWNER_ROLES=project_owner
    - OIDC_BOARD_USER_ROLES=board_user
    - OIDC_IGNORE_USERNAME=false
    - OIDC_IGNORE_ROLES=false
    - OIDC_ENFORCED=true
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:14-alpine
    restart: always
    ports:
      - 5433:5432
    volumes:
      - /opt/appdata/planka/db:/var/lib/postgresql/data
    networks:
      - planka
    environment:
    - POSTGRES_DB=${PG_DB}
    - POSTGRES_HOST_AUTH_METHOD=${PG_AUTH}
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -d planka
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  warptunnel:
    external: true
  planka:
    external: true
